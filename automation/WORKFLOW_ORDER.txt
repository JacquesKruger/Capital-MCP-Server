════════════════════════════════════════════════════════════════════════════════
📊 n8n WORKFLOW IMPORT & EXECUTION ORDER
════════════════════════════════════════════════════════════════════════════════

IMPORT ORDER (1 → 6):
═══════════════════════════════════════════════════════════════════════════════

   ┌─────────────────────────────────────────────────────────────┐
   │ 1️⃣  DATA COLLECTION & SIGNALS                    ✅ DONE  │
   │                                                              │
   │ File: data_signals.json                                     │
   │ Workflow Name: "Data Collection & Signals"                  │
   │ Schedule: Every 15 minutes                                  │
   │ Purpose: Fetch quotes → Calculate indicators → Signals      │
   │ Dependencies: None                                          │
   │ Status: IMPORTED & TESTED                                   │
   └─────────────────────────────────────────────────────────────┘
                              ↓
   ┌─────────────────────────────────────────────────────────────┐
   │ 2️⃣  TELEGRAM NOTIFICATIONS                       📱 NEXT   │
   │                                                              │
   │ File: telegram_notifications.json                           │
   │ Schedule: Every 1 minute (checks for events)                │
   │ Purpose: Send alerts for signals, orders, errors            │
   │ Dependencies: Telegram bot token                            │
   └─────────────────────────────────────────────────────────────┘
                              ↓
   ┌─────────────────────────────────────────────────────────────┐
   │ 3️⃣  TELEGRAM APPROVAL HANDLER                    📱 NEXT   │
   │                                                              │
   │ File: telegram_approval_handler.json                        │
   │ Trigger: Telegram callback/command                          │
   │ Purpose: Handle trade approvals/rejections                  │
   │ Dependencies: Telegram Notifications                        │
   └─────────────────────────────────────────────────────────────┘
                              ↓
   ┌─────────────────────────────────────────────────────────────┐
   │ 4️⃣  RISK & ORDER ROUTING                         ⚠️  DEMO  │
   │                                                              │
   │ File: risk_order_routing.json                               │
   │ Workflow Name: "Risk & Order Routing"                       │
   │ Schedule: Every 1 minute (checks for signals)               │
   │ Purpose: Evaluate signals → Risk checks → Place orders      │
   │ Dependencies: Data Signals, Telegram workflows              │
   │ ⚠️  CRITICAL: Test in DEMO mode only!                       │
   │ ✅ UPDATED: Parse Balance & Positions now return data       │
   └─────────────────────────────────────────────────────────────┘
                              ↓
   ┌─────────────────────────────────────────────────────────────┐
   │ 5️⃣  POST-TRADE MANAGEMENT                        ⚠️  DEMO  │
   │                                                              │
   │ File: post_trade_management.json                            │
   │ Schedule: Every 1 minute (checks positions)                 │
   │ Purpose: Monitor positions → Manage stops → Close trades    │
   │ Dependencies: Risk & Order Routing                          │
   └─────────────────────────────────────────────────────────────┘
                              ↓
   ┌─────────────────────────────────────────────────────────────┐
   │ 6️⃣  NIGHTLY EVALUATION                           📊 LAST   │
   │                                                              │
   │ File: nightly_evaluation.json                               │
   │ Schedule: Daily at 23:59                                    │
   │ Purpose: Performance analysis → Bandit updates              │
   │ Dependencies: All workflows                                 │
   └─────────────────────────────────────────────────────────────┘


EXECUTION TIMELINE (24 hours):
═══════════════════════════════════════════════════════════════════════════════

00:00  │ ┌─────────────────────────────────────────────────────────┐
00:15  │ │ Data Collection (every 15 min)                          │
00:30  │ │   └─> Signals generated                                 │
00:45  │ │       └─> Stored in database                            │
01:00  │ └─────────────────────────────────────────────────────────┘
       │
       │ ┌─────────────────────────────────────────────────────────┐
       │ │ Risk & Order Routing (every 1 min, if signals exist)    │
       │ │   └─> Checks new signals                                │
       │ │       └─> Requests approval (Telegram)                  │
       │ │           └─> Places order (if approved)                │
       │ └─────────────────────────────────────────────────────────┘
       │
       │ ┌─────────────────────────────────────────────────────────┐
       │ │ Post-Trade Mgmt (every 1 min, if positions open)        │
       │ │   └─> Updates stops                                     │
       │ │       └─> Closes profitable trades                      │
       │ └─────────────────────────────────────────────────────────┘
       │
       │ ┌─────────────────────────────────────────────────────────┐
       │ │ Telegram Notifications (every 1 min)                    │
       │ │   └─> Sends pending alerts                              │
       │ └─────────────────────────────────────────────────────────┘
       │
23:59  │ ┌─────────────────────────────────────────────────────────┐
       │ │ Nightly Evaluation (once per day)                       │
       │ │   └─> Calculate performance                             │
       │ │       └─> Update bandit                                 │
       │ │           └─> Generate report                           │
       │ └─────────────────────────────────────────────────────────┘


DATA FLOW:
═══════════════════════════════════════════════════════════════════════════════

┌──────────────┐
│ Capital.com  │ (Market Data)
│   API        │
└──────┬───────┘
       │
       ↓
┌──────────────────────────────┐
│  Data Collection & Signals   │ ← Every 15 min
│  ────────────────────────    │
│  • Fetch quotes              │
│  • Calculate indicators      │
│  • Generate signals          │
└──────┬───────────────────────┘
       │
       ↓ (stores in DB)
┌──────────────────┐
│  PostgreSQL      │
│  • signals       │
│  • candles       │
│  • system_events │
└──────┬───────────┘
       │
       ↓ (queries new signals)
┌──────────────────────────────┐
│  Risk & Order Routing        │ ← Every 1 min
│  ────────────────────────    │
│  • Check risk limits         │
│  • Bandit selects strategy   │
│  • Request approval          │
│  • Place order (if approved) │
└──────┬───────────────────────┘
       │
       ↓ (stores intents, orders)
┌──────────────────┐
│  PostgreSQL      │
│  • intents       │
│  • orders        │
│  • approvals     │
└──────┬───────────┘
       │
       ↓ (monitors positions)
┌──────────────────────────────┐
│  Post-Trade Management       │ ← Every 1 min
│  ────────────────────────    │
│  • Check open positions      │
│  • Update stop losses        │
│  • Close when triggered      │
│  • Record trade results      │
└──────┬───────────────────────┘
       │
       ↓ (stores trades)
┌──────────────────┐
│  PostgreSQL      │
│  • trades        │
│  • performance   │
│  • bandit_policy │
└──────┬───────────┘
       │
       ↓ (analyzes daily)
┌──────────────────────────────┐
│  Nightly Evaluation          │ ← Daily 23:59
│  ────────────────────────    │
│  • Calculate performance     │
│  • Update bandit rewards     │
│  • Generate report           │
└──────────────────────────────┘


ACTIVATION CHECKLIST:
═══════════════════════════════════════════════════════════════════════════════

Before activating each workflow:

□ Data Collection & Signals
  ✅ Database credentials configured
  ✅ MCP server running
  ✅ mcp-caller API healthy
  ✅ TESTED & WORKING

□ Telegram Notifications
  □ TELEGRAM_BOT_TOKEN set in .env
  □ TELEGRAM_CHAT_ID set in .env
  □ Bot tested with /start command
  □ Test message sent successfully

□ Telegram Approval Handler
  □ Telegram Notifications active
  □ Webhook configured (optional)
  □ Test approval command works

□ Risk & Order Routing
  □ CAP_ENVIRONMENT=demo in .env
  □ All risk limits reviewed
  □ Approval flow tested
  □ Telegram alerts working
  ⚠️  NEVER activate with live credentials until fully tested!

□ Post-Trade Management
  □ Risk & Order Routing working
  □ At least one test trade executed
  □ Position monitoring tested

□ Nightly Evaluation
  □ All other workflows stable
  □ Performance metrics defined
  □ Report format reviewed


SAFETY REMINDERS:
═══════════════════════════════════════════════════════════════════════════════

🔴 BEFORE ACTIVATING RISK & ORDER ROUTING:
   1. Verify CAP_ENVIRONMENT=demo
   2. Review config/risk.yaml limits
   3. Test Telegram approval flow
   4. Start with TRADING_HALTED=1, then set to 0
   5. Monitor first 10 executions closely

🔴 NEVER:
   • Activate Risk/Trading workflows with live credentials untested
   • Leave workflows unmonitored
   • Skip the approval step
   • Start with large position sizes
   • Disable safety checks

🟢 ALWAYS:
   • Test in DEMO mode for at least 1 week
   • Review all signals before approving
   • Monitor system_events table
   • Check logs regularly
   • Have kill switch ready (TRADING_HALTED=1)


QUICK START:
═══════════════════════════════════════════════════════════════════════════════

1. Import Workflow #2 (Telegram Notifications)
   → n8n UI → Import from File → telegram_notifications.json

2. Configure Telegram credentials
   → Edit nodes with Telegram bot token

3. Activate and test
   → Send test message

4. Repeat for workflows #3-6 in order

5. Monitor logs
   → docker-compose logs -f n8n


FOR DETAILED INSTRUCTIONS:
═══════════════════════════════════════════════════════════════════════════════

See: WORKFLOW_EXECUTION_GUIDE.md

════════════════════════════════════════════════════════════════════════════════
